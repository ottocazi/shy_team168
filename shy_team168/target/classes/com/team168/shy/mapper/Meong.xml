<?xml version="1.0" encoding="UTF-8"?>

<!-- ===== #26. mapper 기본설정 ===== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- ===== #27. 루트엘리먼트 & 네임스페이스 설정(프로젝트 전체 내에서 고유해야 한다.) ===== -->
<mapper namespace="mangu">

	<!-- 회원가입 -->
	<insert id="addregistorEnd" parameterType="java.util.HashMap">
		insert into tbl_shymember(idx, name, email, pwd, registerdate, status) 
		values(seq_tbl_shymember.nextval, #{joinname}, #{joinemail}, #{joinpwd}, default, default)  
	</insert>
	
	<!-- 이메일중복체크(ajax) -->
	<select id="CheckEmail" parameterType="String" resultType="int"> 
		select nvl(count(*),0) as checker
		from tbl_shymember where email=#{joinemail}
	</select>
	
	<!-- 로그인 여부 알아오기 -->
	<select id="loginEnd" parameterType="java.util.HashMap" resultType="int"> 
		select case( select count(*)
	                 from tbl_shymember
	                 where status in (1,168) and email = #{email} and
	                       pwd = #{pwd} )
	           when 1 then 1
	           else( case(select count(*) 
	                      from tbl_shymember
	                      where email = #{email})
	                 when 1 then 0
	                 else -1
	                 end
	               )
	           end as LOGINCHECK
	  from dual
	</select>
	
	<!-- 로그인 성공한 사용자 정보 가져오기 -->
	<select id="getLoginMember" parameterType="String" resultType="com.team168.shy.model.ShyMemberVO"> 
       select idx, name, email, pwd
       , to_char(registerdate, 'yyyy-mm-dd') as registerdate
       , myimg, myintro, birthday, gender, phone , status
	   from tbl_shymember
	   where status in (1,168) and email = #{email} 
	</select>
	
	<!-- 로그인한 유저 로그기록 저장하기 -->
	<insert id="loginsert" parameterType="java.util.HashMap">
		insert into tbl_log(logno, fk_idx, status, logtime, logip) 
		values(seq_tbl_log.nextval, #{user_seq}, 1, to_date(#{today}, 'yyyy-mm-dd hh24:mi:ss'), #{user_ip})
	</insert>	

	<!-- 로그아웃한 유저 로그기록 저장하기(미완성) -->
<!-- 	<insert id="logoutinsert" parameterType="java.util.HashMap">
		insert into tbl_log(logno, fk_idx, status, logtime, logip) 
		values(seq_tbl_log.nextval, #{user_seq}, 0, to_date(#{today}, 'yyyy-mm-dd hh24:mi:ss'), #{user_ip})
	</insert>	 -->
	
	<!-- 통계를 위한 셀렉트문 -->	
	<select id="gettotaluser" resultType="String">
		select count(*)
		from tbl_shymember
	</select>
		
	<select id="getmentotal" resultType="String">
		select count(*)
		from tbl_shymember
		where gender = '남자'
	</select>
		
	<select id="getwomantotal" resultType="String">
		select count(*)
		from tbl_shymember
		where gender = '여자'
	</select>		
		
	<select id="gettodaytotal" resultType="String" parameterType="java.util.HashMap">
		select distinct count(*)
		from tbl_log 
		where status = 1 and rowid in (select max(rowid) from tbl_log group by fk_idx) and to_date(logtime) = #{today}
	</select>
	
	<select id="gettodaytotalshymemo" resultType="String" parameterType="java.util.HashMap">
		select count(*)
		from tbl_shymemo 
		where to_date(sdatedtime) = #{today}
	</select>		
	
	<select id="gettodaytotalgrpboard" resultType="String" parameterType="java.util.HashMap">
		select count(*)
		from tbl_grpboard 
		where to_date(writedate) = #{today}
	</select>
	
	<!-- 공지사항(미정)부분에서 회원목록 보여주는 select 문 -->
	<resultMap type="java.util.HashMap" id="getshyListMap">
		<result property="IDX" 		        column="idx" 	        javaType="String" />
 		<result property="NAME" 	        column="name" 	        javaType="String" />
 		<result property="EMAIL" 		    column="email" 	        javaType="String" />
 		<result property="PWD" 	            column="pwd" 	        javaType="String" />
 		<result property="REGISTERDATE"		column="registerdate" 	javaType="String" />
 		<result property="STATUS" 	        column="status" 	    javaType="String" />
 		<result property="MYIMG" 		    column="myimg" 	        javaType="String" />
 		<result property="MYINTRO" 	        column="myintro" 	    javaType="String" />
 		<result property="BIRTHDAY" 		column="birthday" 	    javaType="String" />
 		<result property="GENDER" 	        column="gender" 	    javaType="String" />
 		<result property="PHONE" 		    column="phone" 	        javaType="String" />
	</resultMap>
	<select id="getshyList" parameterType="java.util.HashMap" resultMap="getshyListMap">
		select idx, name, email, pwd, registerdate, status, myimg, myintro, birthday, gender, phone
		from
		(
		select rownum as RNO
		, idx, name, email, pwd, registerdate, status, myimg, myintro, birthday, gender, phone
		from
		(
		select idx, name, email, pwd
		     , to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') as registerdate
		     , status, myimg, myintro, birthday, gender, phone
		     from tbl_shymember
		     where status = 1
		     order by idx desc
		)V
		)T
		where T.RNO >= #{start} and T.RNO <![CDATA[<=]]> #{end}
	</select>
	
	<!-- 페이징처리를 위해 총회원수 -->
	<select id="getTotalCount" parameterType="java.util.HashMap" resultType="int"> 
		select count(*)
		from tbl_shymember
		where status = 1
	</select>
	
	<select id="getTotalAdminCount" parameterType="java.util.HashMap" resultType="int"> 
		select count(*)
		from tbl_shymember
		where status = 1
	</select>         
	
	<!-- 공지사항(미정)부분 회원에 대한 게시물조회 -->
	<select id="getmemocount" parameterType="String" resultType="String">
		select count(*) 
		from tbl_shymemo
		where fk_idx = #{COUNT}
	</select>
	
	
	<resultMap type="java.util.HashMap" id="getshyListmap">
		<result property="IDX" 		        column="idx" 	        javaType="int" />
 		<result property="NAME" 	        column="name" 	        javaType="String" />
 		<result property="EMAIL" 		    column="email" 	        javaType="String" />
 		<result property="PWD" 	            column="pwd" 	        javaType="String" />
 		<result property="REGISTERDATE"		column="registerdate" 	javaType="String" />
 		<result property="STATUS" 	        column="status" 	    javaType="int" />
 		<result property="MYIMG" 		    column="myimg" 	        javaType="String" />
 		<result property="MYINTRO" 	        column="myintro" 	    javaType="String" />
 		<result property="BIRTHDAY" 		column="birthday" 	    javaType="String" />
 		<result property="GENDER" 	        column="gender" 	    javaType="String" />
 		<result property="PHONE" 		    column="phone" 	        javaType="String" />
	</resultMap>
	<select id="shyList" parameterType="java.util.HashMap" resultMap="getshyListmap">
		select * 
		from tbl_shymember
		where status in (0,1)
		order by idx desc
	</select>

	<update id="shystatusDown"  parameterType="java.util.HashMap">
		update tbl_shymember
		set status = 0
		where idx = #{idx}
	</update>

	<update id="shystatusUp"  parameterType="java.util.HashMap">
		update tbl_shymember
		set status = 1
		where idx = #{idx}
	</update>
	
	<!-- 하루(시간대별) 통계를 위한 쿼리문 -->
	<resultMap type="java.util.HashMap" id="gettongkeListmap">
		<result property="DAY" 	        column="day" 	    javaType="String" />
 		<result property="TIME" 		    column="time" 	        javaType="String" />
 		<result property="CNT" 	        column="cnt" 	    javaType="String" />
	</resultMap>
	<select id="gettongkeList" resultMap="gettongkeListmap" parameterType="java.util.HashMap">
		select A.time as day, substr(A.time, 12, 13) AS TIME, nvl(B.cnt, 0) as cnt
		from (SELECT TO_CHAR(TO_DATE(#{today}, 'YYYY-MM-DD') + ((LEVEL - 1) / 24), 'YYYY-MM-DD hh24') as time FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> 24) A
		left outer join (select time, count(time) as cnt from (SELECT TO_CHAR(logtime, 'YYYY-MM-DD hh24') as time from tbl_log where to_char(logtime, 'yyyy-mm-dd') = #{today}) group by time) B
		on A.time = B.time
		order by time asc
	</select>
	
	<!-- 하루(시간대별) 통계를 위한 쿼리문 -->
	<resultMap type="java.util.HashMap" id="gettongkeList2map">
		<result property="DAY" 	        column="day" 	    javaType="String" />
 		<result property="TIME" 		    column="time" 	        javaType="String" />
 		<result property="CNT" 	        column="cnt" 	    javaType="String" />
	</resultMap>
	<select id="gettongkeList2" resultMap="gettongkeList2map" parameterType="java.util.HashMap">
		select A.time as day, substr(A.time, 12, 13) AS TIME, nvl(B.cnt, 0) as cnt
		from (SELECT TO_CHAR(TO_DATE(#{yesterday}, 'YYYY-MM-DD') + ((LEVEL - 1) / 24), 'YYYY-MM-DD hh24') as time FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> 24) A
		left outer join (select time, count(time) as cnt from (SELECT TO_CHAR(logtime, 'YYYY-MM-DD hh24') as time from tbl_log where to_char(logtime, 'yyyy-mm-dd') = #{yesterday}) group by time) B
		on A.time = B.time
		order by time asc
	</select>
	
	
	<!-- 성민 -->
	    <resultMap type="java.util.HashMap" id="searchpeopleMap">
		<result property="IDX" 			column="idx" 			javaType="String" />
 		<result property="NAME"  		column="name" 			javaType="String" />
 		<result property="EMAIL"  		column="email" 			javaType="String" />
 		<result property="PWD"  		column="pwd" 			javaType="String" />
 		<result property="REGISTERDATE" column="registerdate" 	javaType="String" />
 		<result property="MYIMG"  		column="myimg" 			javaType="String" />
 		<result property="MYINTRO"  	column="myintro" 		javaType="String" />
 		<result property="BIRTHDAY" 	column="birthday" 		javaType="String" />
 		<result property="GENDER"  		column="gender" 		javaType="String" />
 		<result property="PHONE"  		column="phone" 			javaType="String" />
	</resultMap>
	 <select id="plist" parameterType="String" resultMap="searchpeopleMap">
	    select *
        from tbl_shymember
        where status = 1
        order by idx desc
	</select> 
	
	
	<!-- =====  ===== -->
	<resultMap type="java.util.HashMap" id="getFollowListArrMap">
		<result property="IDX" column="IDX" javaType="String"/>
		<result property="FOLLOWCHECK" column="FOLLOWCHECK" javaType="int"/>
	</resultMap>
	
	<select id="getFollowListArr" resultMap="getFollowListArrMap" parameterType="java.util.HashMap">
		SELECT A.IDX, NVL(B.STATUS, 0) AS FOLLOWCHECK
		FROM (SELECT * FROM TBL_SHYMEMBER WHERE IDX IN 
			<foreach collection="idxArr" item="item" index="i"  separator="," open="(" close=")">
				  ${idxArr[i]}
			</foreach>
													   )A 
			  LEFT OUTER JOIN  
      		 (SELECT *  FROM TBL_FOLLOW WHERE FK_IDXFLW = #{idx}  ) B
      		  ON A.IDX = B.FK_IDXFLWED
	</select>
	
	<!-- 운영자 리스트보여주는 select문 -->
	<resultMap type="java.util.HashMap" id="getadminListMap">
		<result property="IDX" 		        column="idx" 	        javaType="String" />
 		<result property="NAME" 	        column="name" 	        javaType="String" />
 		<result property="EMAIL" 		    column="email" 	        javaType="String" />
 		<result property="PWD" 	            column="pwd" 	        javaType="String" />
 		<result property="REGISTERDATE"		column="registerdate" 	javaType="String" />
 		<result property="STATUS" 	        column="status" 	    javaType="String" />
 		<result property="MYIMG" 		    column="myimg" 	        javaType="String" />
 		<result property="MYINTRO" 	        column="myintro" 	    javaType="String" />
 		<result property="BIRTHDAY" 		column="birthday" 	    javaType="String" />
 		<result property="GENDER" 	        column="gender" 	    javaType="String" />
 		<result property="PHONE" 		    column="phone" 	        javaType="String" />
	</resultMap>
	<select id="getadminList" parameterType="String" resultMap="getadminListMap">
		select idx, name, email, pwd, registerdate, status, myimg, myintro, birthday, gender, phone
		from
		(
		select rownum as RNO
		, idx, name, email, pwd, registerdate, status, myimg, myintro, birthday, gender, phone
		from
		(
		select idx, name, email, pwd
		     , to_char(registerdate, 'yyyy-mm-dd hh24:mi:ss') as registerdate
		     , status, myimg, myintro, birthday, gender, phone
		     from tbl_shymember
		     where status = 168
		     order by idx desc
		)V
		)T
		where T.RNO >= #{start} and T.RNO <![CDATA[<=]]> #{end}
	</select>
	
	<!-- 하루(시간대별) 통계를 위한 쿼리문 -->
	<resultMap type="java.util.HashMap" id="gettongkeList3map">
		<result property="DAY" 	        column="day" 	    javaType="String" />
 		<result property="TIME" 		    column="time" 	        javaType="String" />
 		<result property="CNT" 	        column="cnt" 	    javaType="String" />
	</resultMap>
	<select id="gettongkeList3" resultMap="gettongkeList3map" parameterType="java.util.HashMap">
		select A.time as day, substr(A.time, 12, 13) AS TIME, nvl(B.cnt, 0) as cnt
		from (SELECT TO_CHAR(TO_DATE(#{today2}, 'YYYY-MM-DD') + ((LEVEL - 1) / 24), 'YYYY-MM-DD hh24') as time FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> 24) A
		left outer join (select time, count(time) as cnt from (SELECT TO_CHAR(logtime, 'YYYY-MM-DD hh24') as time from tbl_log where to_char(logtime, 'yyyy-mm-dd') = #{today2}) group by time) B
		on A.time = B.time
		order by time asc
	</select>
	
	<!-- 하루(시간대별) 통계를 위한 쿼리문 -->
	<resultMap type="java.util.HashMap" id="gettongkeList4map">
		<result property="DAY" 	        column="day" 	    javaType="String" />
 		<result property="TIME" 		    column="time" 	        javaType="String" />
 		<result property="CNT" 	        column="cnt" 	    javaType="String" />
	</resultMap>
	<select id="gettongkeList4" resultMap="gettongkeList4map" parameterType="java.util.HashMap">
		select A.time as day, substr(A.time, 12, 13) AS TIME, nvl(B.cnt, 0) as cnt
		from (SELECT TO_CHAR(TO_DATE(#{yesterday2}, 'YYYY-MM-DD') + ((LEVEL - 1) / 24), 'YYYY-MM-DD hh24') as time FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> 24) A
		left outer join (select time, count(time) as cnt from (SELECT TO_CHAR(logtime, 'YYYY-MM-DD hh24') as time from tbl_log where to_char(logtime, 'yyyy-mm-dd') = #{yesterday2}) group by time) B
		on A.time = B.time
		order by time asc
	</select>
	
	<!-- 기현이형 메인라인 -->
	<select id="followlist" parameterType="int" resultType="String">
		select fk_idxflwed
		from tbl_follow
		where 1=1 and fk_idxflw = #{idx} and status = 1
	</select>	
	
	<resultMap type="java.util.HashMap" id="shies">
	
		<result property="snsno" 		column="SNSNO" 			javaType="String"/>
		<result property="fk_idx" 		column="FK_IDX" 		javaType="String"/>
		<result property="scontent" 	column="SCONTENT" 		javaType="String"/>
		<result property="sdatedtime" 	column="SDATEDTIME" 	javaType="String"/>
		<result property="slikecnt" 	column="SLIKECNT" 		javaType="String"/>
		<result property="sblamecnt" 	column="SBLAMECNT" 		javaType="String"/>
		<result property="publicyn" 	column="PUBLICYN" 		javaType="String"/>
		<result property="simage" 		column="SIMAGE" 		javaType="String"/>
		<result property="stagfollow" 	column="STAGFOLLOW" 	javaType="String"/>
		<result property="staggeo" 		column="STAGGEO" 		javaType="String"/>
		<result property="status" 		column="STATUS" 		javaType="String"/>
		<result property="name" 		column="NAME" 			javaType="String"/>
		<result property="email" 		column="EMAIL" 			javaType="String"/>
		<result property="myimg" 		column="MYIMG" 			javaType="String"/>
		
	</resultMap>
	
	<select id="shies" parameterType="java.util.List" resultMap="shies">
		SELECT A.* , B.EMAIL, B.NAME , B.MYIMG
		FROM TBL_SHYMEMO A INNER JOIN TBL_SHYMEMBER B ON A.FK_IDX = B.IDX
		WHERE	 1=1 AND A.STATUS = 1 AND
				 FK_IDX IN
				<foreach collection="list" item="item" index="i" open="(" close=")" separator=",">
					${item}
				</foreach>
		ORDER BY A.SNSNO DESC
	</select>
	
	<select id="imgaddr" parameterType="String" resultType="String">
		SELECT 	FILENAME 
		FROM	TBL_IMAGE
		WHERE 	SNSNO = #{snsno} and rownum = 1	
	</select>
	
	<!-- 공유하기 -->
	<insert id="AddShare" parameterType="java.util.HashMap">
		insert into tbl_share 
		values(seq_tbl_share.nextval, #{fk_idx}, #{snsno}, default, default)
	</insert>
	
	<!-- 하루(시간대별) 게시물통계(BAR)를 위한 쿼리문(회원) -->
	<resultMap type="java.util.HashMap" id="getbarListmap">
		<result property="MONTH" 	        column="month" 	    javaType="String" />
 		<result property="DAY" 		    column="day" 	        javaType="String" />
 		<result property="CNT" 	        column="cnt" 	    javaType="String" />
	</resultMap>
	<select id="getBarTKList" resultMap="getbarListmap" parameterType="java.util.HashMap">
		select A.time as month, substr(A.time, 9, 10) AS day  , nvl(B.cnt, 0) as cnt
		from      (SELECT TO_CHAR(sysdate-7 + ((LEVEL - 1) / 1), 'YYYY-MM-DD') as time FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> 7)    A
		
		left outer join (select day, count(day) as cnt from (SELECT TO_CHAR(sdatedtime, 'YYYY-MM-DD') as day from tbl_shymemo) group by day) B
		
		on A.time = B.day
		order by time asc
	</select>
	
	<!-- 하루(시간대별) 게시물통계(BAR)를 위한 쿼리문(그룹) -->
	<resultMap type="java.util.HashMap" id="getbarList2map">
		<result property="MONTH" 	        column="month" 	    javaType="String" />
 		<result property="DAY" 		    column="day" 	        javaType="String" />
 		<result property="CNT" 	        column="cnt" 	    javaType="String" />
	</resultMap>
	<select id="getBarTKList2" resultMap="getbarList2map" parameterType="java.util.HashMap">
		select A.time as month, substr(A.time, 9, 10) AS day  , nvl(B.cnt, 0) as cnt
		from      (SELECT TO_CHAR(sysdate-7 + ((LEVEL - 1) / 1), 'YYYY-MM-DD') as time FROM DUAL CONNECT BY LEVEL <![CDATA[<=]]> 7)    A
		
		left outer join (select day, count(day) as cnt from (SELECT TO_CHAR(writedate, 'YYYY-MM-DD') as day from tbl_grpboard) group by day) B
		
		on A.time = B.day
		order by time asc
	</select>
	
	<!-- 게시물조회 -->
	<resultMap type="java.util.HashMap" id="getshymemoListmap">
		<result property="SNSNO" 		        column="snsno" 	        javaType="String" />
		<result property="FK_IDX" 		        column="fk_idx" 	        javaType="String" />
 		<result property="NAME" 	        	column="name" 	        	javaType="String" />
 		<result property="GENDER" 		    	column="gender" 	        javaType="String" />
 		<result property="SCONTENT" 	        column="scontent" 	    	javaType="String" />
 		<result property="SDATEDTIME"			column="sdatedtime" 		javaType="String" />
 		<result property="SLIKECNT" 	        column="slikecnt" 	    	javaType="int" />
 		<result property="SBLAMECNT" 		    column="sblamecnt" 	        javaType="int" />
 		<result property="STATUS" 	       	 	column="status" 	    	javaType="int" />
	</resultMap>
	<select id="getshymemoList" resultMap="getshymemoListmap">
		select E.snsno, E.fk_idx, D.name, D.gender, E.scontent, E.sdatedtime, E.slikecnt, E.sblamecnt, E.status 
		from tbl_shymemo E left join tbl_shymember D 
		on E.fk_idx  =  D.idx
		order by sdatedtime desc
	</select>
	
	<update id="memostatusDown"  parameterType="java.util.HashMap">
		update tbl_shymemo
		set status = 0
		where snsno = #{snsno}
	</update>

	<update id="memostatusUp"  parameterType="java.util.HashMap">
		update tbl_shymemo
		set status = 1
		where snsno = #{snsno}
	</update>
	
	<!-- 지역별 회원수 통계를 위한 쿼리문 -->
	<resultMap type="java.util.HashMap" id="getpietkListmap">
		<result property="CITY" 	        column="city" 	    javaType="String" />
 		<result property="CNT" 		    column="cnt" 	        javaType="int" />
	</resultMap>
	<select id="getpietkList" resultMap="getpietkListmap">
		SELECT case nvl(area1, '기타지역') when 'X' then '지역미입력'
		                                 else nvl(area1, '기타지역')
		       end as city, COUNT(*) AS CNT 
		FROM tbl_geo
		GROUP BY area1
	</select>
	
	<!-- 국가별 회원수 통계를 위한 쿼리문 -->
	<resultMap type="java.util.HashMap" id="getdoughnutListmap">
		<result property="COUNTRY" 	        column="country" 	    javaType="String" />
 		<result property="CNT" 		    column="cnt" 	        javaType="int" />
	</resultMap>
	<select id="getdoughnutList" resultMap="getdoughnutListmap">
		SELECT nvl(country, '기타지역') as country, COUNT(*) AS CNT 
		FROM tbl_geo
		WHERE NOT COUNTRY = 'X'
		GROUP BY country
	</select>
	
	
	
</mapper>






