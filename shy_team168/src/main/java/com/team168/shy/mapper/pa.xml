<?xml version="1.0" encoding="UTF-8"?>

<!-- =====   mapper 기본설정 ===== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- =====   루트엘리먼트 & 네임스페이스 설정(프로젝트 전체 내에서 고유해야 한다.) ===== -->
<mapper namespace="pa">

	<!-- ===== 6. Ajax 로 검색어 입력시 자동글 완성하기 =====  -->
	<!-- <resultMap type="java.util.HashMap" id="getSearchWordMap">
		<result property="SEARCHDATA" column="searchdata" javaType="String" />
	</resultMap>
	<select id="searchWordgrpList" parameterType="java.util.HashMap" resultMap="getSearchWordMap"> 
		<if test='colname.equals("gname")'>
		    select gname as searchdata 
		    from tbl_group
		    where lower(gname) like '%' || lower(#{grpsearch}) || '%'
		</if>
		
		<if test='colname.equals("gcontent")'>
		    select substr(gcontent, instr(gcontent, #{grpsearch}, 1, 1), length(#{grpsearch}) + 5 )
		           as searchdata    
		    from tbl_grpboard
		    where lower(gcontent) like '%' || lower(#{grpsearch}) || '%'
		</if>
	</select> -->
	
	<!-- ===== 그룹만들기 ===== -->	
	<insert id="grpinsert" parameterType="com.team168.shy.model.GroupVO">
		<if test='gimg != null'>
		insert into tbl_group(groupno, fk_idx, gname, description, gimg, status, groupdate,gcount)
		values(seq_tbl_group.nextval, #{fk_idx}, #{gname}, #{description}, #{gimg}, #{status} , default,default)
		</if>
		<if test='gimg == null'>
		insert into tbl_group(groupno, fk_idx, gname, description, gimg, status, groupdate,gcount)
		values(seq_tbl_group.nextval, #{fk_idx}, #{gname}, #{description}, default, #{status} , default,default)
		</if>
	</insert>
	
	<!-- ===== 그룹멤버 insert ===== -->	
	<insert id="gmemberinsert" parameterType="java.util.HashMap">
		insert into tbl_gmember(gpdetailno,fk_groupno,fk_groupidx,gregisterdate,status) 
		values(seq_tbl_gmember.nextval,#{fk_groupno},#{fk_groupidx},default,default)
	</insert>
	
	<!-- ===== 인기그룹 가져오기 =====  -->
	<resultMap type="java.util.HashMap" id="hotgroupMap">
		<result property="groupno" 				column="GROUPNO" 			javaType="int" />
 		<result property="fk_idx" 			column="FK_IDX" 			javaType="string" />
 		<result property="gname" 			column="GNAME" 			javaType="string" />
 		<result property="description" 			column="DESCRIPTION" 		javaType="string" />
 		<result property="groupdate" 			column="GROUPDATE" 			javaType="string" />
 		<result property="status" 	column="STATUS" 	javaType="int" />
 		<result property="gimg" 	column="GIMG" 	javaType="string" />
 		<result property="gcount" 	column="GCOUNT" 	javaType="int" />
 		<result property="rank" 	column="RANK" 	javaType="int" />
 		<result property="myimg" 	column="MYIMG" 	javaType="string" />
 		<result property="name" 	column="NAME" 	javaType="string" />
	</resultMap>
	<select id="hotGrpList" resultMap="hotgroupMap"> 
		 select A.groupno, A.fk_idx, A.gname, A.description,A.groupdate, A.status, A.gimg, A.gcount,
				 rank() over (order by A.gcount desc) as rank, B.myimg, B.name
		 from
		 (select  groupno, fk_idx, gname, description, gimg, status, groupdate, gcount,
						  rank() over (order by gcount desc) as rank
		 from tbl_group
		 where status in(1,2)
		 order by rank) A
	     left join tbl_shymember B
	     on A.fk_idx = B.idx
	</select>
	
	<!-- ===== 그룹 가져오기 =====  -->
	<select id="selectGvo" parameterType="String" resultType="com.team168.shy.model.GroupVO" > 
		 select  groupno, fk_idx, gname
		 from tbl_group
		 where to_char(groupdate,'yyyy-mm-dd hh:mi') = to_char(sysdate,'yyyy-mm-dd hh:mi') and
		 	   fk_idx = #{fk_idx}
	</select>
	
	<!-- ===== 신규그룹 가져오기 =====  -->
	<resultMap type="java.util.HashMap" id="newgroupMap">
		<result property="groupno" 				column="GROUPNO" 			javaType="int" />
 		<result property="fk_idx" 			column="FK_IDX" 			javaType="string" />
 		<result property="gname" 			column="GNAME" 			javaType="string" />
 		<result property="description" 			column="DESCRIPTION" 		javaType="string" />
 		<result property="groupdate" 			column="GROUPDATE" 			javaType="string" />
 		<result property="status" 	column="STATUS" 	javaType="int" />
 		<result property="gimg" 	column="GIMG" 	javaType="string" />
 		<result property="gcount" 	column="GCOUNT" 	javaType="int" />
 		<result property="rank" 	column="RANK" 	javaType="int" />
 		<result property="myimg" 	column="MYIMG" 	javaType="string" />
 		<result property="name" 	column="NAME" 	javaType="string" />
	</resultMap>
	<select id="newGrpList" resultMap="newgroupMap"> 
		 select A.groupno, A.fk_idx, A.gname, A.description,A.groupdate, A.status, A.gimg, A.gcount,
				 rank() over (order by A.gcount desc) as rank, B.myimg, B.name
		 from
		 (select  groupno, fk_idx, gname, description, gimg, status, groupdate, gcount
		 from tbl_group
		 where status in(1,2)
		 order by groupdate desc) A
	     left join tbl_shymember B
	     on A.fk_idx = B.idx
	     order by groupdate desc
	</select>
	
	<!-- ===== 내그룹 가져오기(내가 만든것) =====  -->
	<resultMap type="java.util.HashMap" id="mygroupMap">
		<result property="groupno" 				column="GROUPNO" 			javaType="int" />
 		<result property="fk_idx" 			column="FK_IDX" 			javaType="string" />
 		<result property="gname" 			column="GNAME" 			javaType="string" />
 		<result property="description" 			column="DESCRIPTION" 		javaType="string" />
 		<result property="groupdate" 			column="GROUPDATE" 			javaType="string" />
 		<result property="status" 	column="STATUS" 	javaType="int" />
 		<result property="gimg" 	column="GIMG" 	javaType="string" />
 		<result property="gcount" 	column="GCOUNT" 	javaType="int" />
 		<result property="myimg" 	column="MYIMG" 	javaType="string" />
 		<result property="name" 	column="NAME" 	javaType="string" />
	</resultMap>
	<select id="myGrpList" parameterType="int" resultMap="mygroupMap"> 
		 select A.groupno, A.fk_idx, A.gname, A.description,A.groupdate, A.status, A.gimg, A.gcount
		 		,B.myimg, B.name
		 from
		 (select  *
		 from tbl_group
		 where fk_idx=#{fk_idx} and status in(1,2,3)) A
	     left join tbl_shymember B
	     on A.fk_idx = B.idx
	</select>
	
	<!-- ===== 그룹 디테일보기 =====  -->
	<resultMap type="java.util.HashMap" id="groupDetailMap">
		<result property="GROUPNO" 				column="groupno" 			javaType="int" />
 		<result property="FK_IDX" 			column="fk_idx" 			javaType="String" />
 		<result property="GNAME" 			column="gname" 			javaType="String" />
 		<result property="DESCRIPTION" 			column="description" 		javaType="String" />
 		<result property="GROUPDATE" 			column="groupdate" 			javaType="String" />
 		<result property="STATUS" 	column="status" 	javaType="int" />
 		<result property="GIMG" 	column="gimg" 	javaType="String" />
 		<result property="GCOUNT" 	column="gcount" 	javaType="int" />
 		<result property="NAME" 	column="name" 	javaType="String" />
 		<result property="EMAIL" 	column="email" 	javaType="String" />
 		<result property="MYIMG" 	column="myimg" 	javaType="String" />
 		<result property="MYINTRO" 	column="myintro" 	javaType="String" />
	</resultMap>
	<select id="groupDetail" parameterType="int" resultMap="groupDetailMap"> 
		select groupno,fk_idx, gname,description,groupdate,status,gimg,gcount,name,email,myimg,myintro
		from view_tbl_group
		where groupno = #{groupno}
	</select>
	
	<!-- ===== 그룹멤버 정보 가져오기 =====  -->
	<resultMap type="java.util.HashMap" id="groupMemberMap">
		<result property="GROUPNO" 				column="groupno" 			javaType="int" />
		<result property="GPDETAILNO" 				column="gpdetailno" 			javaType="int" />
 		<result property="FK_GROUPIDX" 			column="fk_groupidx" 			javaType="String" />
 		<result property="GREGISTERDATE" 			column="gregisterdate" 			javaType="String" />
 		<result property="STATUS" 	column="status" 	javaType="int" />
 		<result property="NAME" 	column="name" 	javaType="String" />
 		<result property="EMAIL" 	column="email" 	javaType="String" />
 		<result property="MYIMG" 	column="myimg" 	javaType="String" />
	</resultMap>
	<select id="gmemberList" parameterType="int" resultMap="groupMemberMap"> 
		 select name,email,myimg, groupno , gpdetailno, fk_groupidx, gregisterdate, status
		 from
		  (select C.name,C.email,C.myimg, V.*
		  from tbl_shymember C join 
		  (
		   select A.groupno ,B.gpdetailno,B.fk_groupidx,B.gregisterdate,B.status
		   from tbl_group A join tbl_gmember B 
		   on A.groupno = B.fk_groupno
		  )V
		  on V.fk_groupidx=C.idx)T
		 where T.groupno = #{groupno}
	</select>
	
	<!-- ===== 그룹게시글 insert ===== -->	
	<insert id="gboardWrite" parameterType="java.util.HashMap">
		<if test='!uploadfile.equals("")'>
		insert into tbl_grpboard(grpboardseq,gpdetailno,gcontent,uploadfile,writedate,likecnt,cmtcnt,imgyn,status)
		values(seq_tbl_grpboard.nextval, #{gpdetailno}, #{gcontent}, #{uploadfile}, default,default, default,1,default)
		</if>
		<if test='uploadfile.equals("")'>
		insert into tbl_grpboard(grpboardseq,gpdetailno,gcontent,uploadfile,writedate,likecnt,cmtcnt,imgyn,status)
		values(seq_tbl_grpboard.nextval, #{gpdetailno}, #{gcontent}, #{uploadfile}, default,default, default,default,default)
		</if>
	</insert>
	
	<!-- ===== 그룹글 목록 가져오기 ===== -->	
	<resultMap type="java.util.HashMap" id="groupBoardMap">
		<result property="FK_GROUPNO" 				column="fk_groupno" 			javaType="int" />
		<result property="GPDETAILNO" 				column="gpdetailno" 			javaType="int" />
		<result property="GRPBOARDSEQ" 				column="grpboardseq" 			javaType="int" />
 		<result property="FK_GROUPIDX" 			column="fk_groupidx" 			javaType="String" />
 		<result property="GCONTENT" 			column="gcontent" 			javaType="String" />
 		<result property="UPLOADFILE" 			column="uploadfile" 			javaType="String" />
 		<result property="WRITEDATE" 			column="writedate" 			javaType="String" />
 		<result property="LIKECNT" 	column="likecnt" 	javaType="int" />
 		<result property="CMTCNT" 	column="cmtcnt" 	javaType="int" />
 		<result property="IMGYN" 	column="imgyn" 	javaType="int" />
 		<result property="STATUS" 	column="status" 	javaType="int" />
 		<result property="NAME" 	column="name" 	javaType="String" />
 		<result property="EMAIL" 	column="email" 	javaType="String" />
 		<result property="MYIMG" 	column="myimg" 	javaType="String" />
	</resultMap>
	<select id="gboardList" parameterType="int" resultMap="groupBoardMap"> 
		select name,email,myimg,fk_groupno,fk_groupidx,grpboardseq,gpdetailno,gcontent,uploadfile,writedate,likecnt,cmtcnt,imgyn,status
		from
		(
		select C.name,C.email,C.myimg,V.*
		from tbl_shymember C join
		(
		select A.fk_groupno,A.fk_groupidx,B.grpboardseq,B.gpdetailno,B.gcontent,B.uploadfile,B.writedate,B.likecnt,B.cmtcnt,B.imgyn,B.status
		from tbl_gmember A join tbl_grpboard B
		on A.gpdetailno = B.gpdetailno)V
		on C.idx = V.fk_groupidx
		)T
		where T.fk_groupno=#{groupno}
		order by grpboardseq desc
	</select>
	
	<!-- ===== 그룹 가져오기 =====  -->
	<select id="gmemberidx" parameterType="java.util.HashMap" resultType="String"> 
		 select gpdetailno
		 from
		 (
		  select C.idx,V.*
		  from tbl_shymember C join
		 (
		  select A.groupno,B.gpdetailno ,B.fk_groupidx
		  from tbl_group A join  tbl_gmember B
		  on A.groupno = B.fk_groupno)V
		  on C.idx = V.fk_groupidx
		 )T
		 where T.idx = #{idx} and T.groupno = #{str_groupno}
	</select>
	
	<!-- =====  그룹회원수 1증가하기 =====  -->
	<update id="gmemberUpdate" parameterType="int">
		update tbl_group set gcount = gcount+1
		where groupno = #{fk_groupno}
	</update>
	
	<!-- ===== 그룹회원인지 아닌지 먼저 확인 =====  -->
	<select id="gmemberCheck" parameterType="java.util.HashMap" resultType="int"> 
		select case( select count(*)
	                 from tbl_gmember
	                 where fk_groupidx=#{fk_groupidx} and fk_groupno=#{fk_groupno}  )
	           when 1 then 1
	           else 0
	           end
		from dual
	</select>
	
	<!-- =====  나의 샤이 가져오기 , 내 정보 가져오기(join) ===== 
	<resultMap type="java.util.HashMap" id="myshies">
		<result property="snsno" 		column="SNSNO" 			javaType="String"/>
		<result property="fk_idx" 		column="FK_IDX" 		javaType="String"/>
		<result property="scontent" 	column="SCONTENT" 		javaType="String"/>
		<result property="sdatedtime" 	column="SDATEDTIME" 	javaType="String"/>
		<result property="slikecnt" 	column="SLIKECNT" 		javaType="String"/>
		<result property="sblamecnt" 	column="SBLAMECNT" 		javaType="String"/>
		<result property="publicyn" 	column="PUBLICYN" 		javaType="String"/>
		<result property="simage" 		column="SIMAGE" 		javaType="String"/>
		<result property="stagfollow" 	column="STAGFOLLOW" 	javaType="String"/>
		<result property="staggeo" 		column="STAGGEO" 		javaType="String"/>
		<result property="status" 		column="STATUS" 		javaType="String"/>
		<result property="name" 		column="NAME" 			javaType="String"/>
		<result property="email" 		column="EMAIL" 			javaType="String"/>
		<result property="myimg" 		column="MYIMG" 			javaType="String"/>
	</resultMap>
	<select id="myshyList" parameterType="java.util.HashMap" resultMap="myshies">
		SELECT V.*
		FROM
		(
		SELECT rownum as RNO,A.* , B.EMAIL, B.NAME , B.MYIMG
		FROM TBL_SHYMEMO A INNER JOIN TBL_SHYMEMBER B ON A.FK_IDX = B.IDX
		WHERE	 1=1 AND A.STATUS = 1 AND
				 FK_IDX = #{myIdx}
		ORDER BY A.SNSNO DESC)V
        WHERE V.RNO > 0 and V.RNO <![CDATA[<=]]> #{end}
        ORDER by V.RNO
	</select> -->
	
	<!-- =====  이미지 가져오기 =====  -->
	<select id="myshyImg" parameterType="String" resultType="String">
		SELECT 	FILENAME 
		FROM	TBL_IMAGE
		WHERE 	SNSNO = #{snsno} and rownum = 1	
	</select>
	
	<!-- ===== 좋아요 insert ===== -->	
	<insert id="insertlike" parameterType="java.util.HashMap">
		<if test='seqcolum.equals("snsno")'>
		insert into tbl_like(likeno,fk_likeidx,likedate,snsno)
		values(seq_tbl_like.nextval,#{fk_likeidx},default,#{likeseq})
		</if>
		<if test='seqcolum.equals("storeboardno")'>
		insert into tbl_like(likeno,fk_likeidx,likedate,storeboardno)
		values(seq_tbl_like.nextval,#{fk_likeidx},default,#{likeseq})
		</if>
		<if test='seqcolum.equals("grpboardseq")'>
		insert into tbl_like(likeno,fk_likeidx,likedate,grpboardseq)
		values(seq_tbl_like.nextval,#{fk_likeidx},default,#{likeseq})
		</if>
	</insert>
	
	<!-- ===== 좋아요 delete ===== -->	
	<delete id="deleteLike" parameterType="java.util.HashMap">
		<if test='seqcolum.equals("snsno")'>
		delete from tbl_like where fk_likeidx =#{fk_likeidx} and snsno = #{likeseq}
		</if>
		<if test='seqcolum.equals("storeboardno")'>
		delete from tbl_like where fk_likeidx =#{fk_likeidx} and storeboardno = #{likeseq}
		</if>
		<if test='seqcolum.equals("grpboardseq")'>
		delete from tbl_like where fk_likeidx =#{fk_likeidx} and grpboardseq = #{likeseq}
		</if>
	</delete>
	
	<!-- ===== 좋아요 가져오기 =====   -->
	<resultMap type="java.util.HashMap" id="getlikeListMap">
		<result property="snsno" column="SNSNO" javaType="String" />
		<result property="totalcount" column="TOTALCOUNT" javaType="String" />
		<result property="mylikestat" column="MYLIKESTAT" javaType="String" />
	</resultMap>
	<select id="getmyLikeList" parameterType="java.util.HashMap" resultMap="getlikeListMap"> 
      SELECT A.SNSNO , NVL(B.CNT , 0) AS TOTALCOUNT , case when NVL(C.snsno , 0) > 0 then 1 else 0 end AS MYLIKESTAT
	  FROM (SELECT * FROM TBL_SHYMEMO WHERE SNSNO IN 
	  <foreach collection="snsnoArr" item="snsno" index="i" open="(" close=")" separator=",">
		${snsno}
	  </foreach>
	  ) A 

      LEFT OUTER JOIN  
      (SELECT SNSNO , COUNT(*) AS CNT FROM TBL_LIKE GROUP BY SNSNO) B
      
      ON A.SNSNO = B.SNSNO LEFT OUTER join 
      (SELECT SNSNO FROM tbl_like WHERE FK_LIKEIDX=#{fk_likeidx} GROUP BY SNSNO) c on b.snsno=c.snsno
	</select>
	
	<!-- =====  (페이징 처리한 것)나의 샤이 가져오기 , 내 정보 가져오기 =====  -->
	<resultMap type="java.util.HashMap" id="getmyshies">
		<result property="snsno" 		column="SNSNO" 			javaType="String"/>
		<result property="fk_idx" 		column="FK_IDX" 		javaType="String"/>
		<result property="scontent" 	column="SCONTENT" 		javaType="String"/>
		<result property="sdatedtime" 	column="SDATEDTIME" 	javaType="String"/>
		<result property="slikecnt" 	column="SLIKECNT" 		javaType="String"/>
		<result property="sblamecnt" 	column="SBLAMECNT" 		javaType="String"/>
		<result property="publicyn" 	column="PUBLICYN" 		javaType="String"/>
		<result property="simage" 		column="SIMAGE" 		javaType="String"/>
		<result property="stagfollow" 	column="STAGFOLLOW" 	javaType="String"/>
		<result property="staggeo" 		column="STAGGEO" 		javaType="String"/>
		<result property="status" 		column="STATUS" 		javaType="String"/>
		<result property="name" 		column="NAME" 			javaType="String"/>
		<result property="email" 		column="EMAIL" 			javaType="String"/>
		<result property="myimg" 		column="MYIMG" 			javaType="String"/>
		<result property="snsnocnt" 	column="SNSNOCNT" 			javaType="int"/>
	</resultMap>
	<select id="getmyshyList" parameterType="java.util.HashMap" resultMap="getmyshies">
        SELECT X.*,NVL(Y.SNSNOCNT,0) AS SNSNOCNT
        FROM          
                (SELECT ROWNUM AS RNO,V.*
		FROM
		(
				SELECT A.* , B.EMAIL, B.NAME , B.MYIMG
				FROM TBL_SHYMEMO A INNER JOIN TBL_SHYMEMBER B ON A.FK_IDX = B.IDX
				WHERE	 A.STATUS in(1,168) AND
				FK_IDX = #{myIdx}
                ORDER by A.SDATEDTIME DESC)V)X
        LEFT JOIN
                (SELECT SNSNO,COUNT(SNSNO) AS SNSNOCNT FROM TBL_LIKE GROUP BY SNSNO) Y
                ON X.SNSNO = Y.SNSNO
                WHERE RNO >= #{start} AND RNO <![CDATA[<=]]> #{end}
	</select>
	
	<!--  -->
	<!-- =====  나의 샤이 개수 가져오기 , 내 정보 개수 가져오기 =====  -->
	<select id="getmyshyCount" parameterType="String" resultType="int">
		SELECT count(*)
		FROM
		(
		SELECT A.* , B.EMAIL, B.NAME , B.MYIMG
		FROM TBL_SHYMEMO A INNER JOIN TBL_SHYMEMBER B ON A.FK_IDX = B.IDX
		WHERE	 1=1 AND A.STATUS in(1,168) AND
				 FK_IDX = #{myIdx}
		ORDER BY A.SNSNO DESC) V
	</select>
	<!--  -->
	
	<!-- ===== 내 팔로우 가져오기 =====   -->
   <resultMap type="java.util.HashMap" id="getflwListMap">
      <result property="fk_idxflwed" column="FK_IDXFLWED" javaType="String" />
      <result property="email" column="EMAIL" javaType="String" />
      <result property="myimg" column="MYIMG" javaType="String" />
   </resultMap>
   <select id="getflwList" parameterType="String" resultMap="getflwListMap"> 
      SELECT V.FK_IDXFLWED,V.EMAIL,V.MYIMG
      FROM
      (
      SELECT *
      FROM
      (SELECT FK_IDXFLWED,FK_IDXFLW
      FROM TBL_FOLLOW) A
      INNER JOIN
      (SELECT IDX, EMAIL,MYIMG
      FROM TBL_SHYMEMBER
      WHERE STATUS in(1,168)) B
      ON A.FK_IDXFLWED = B.IDX
      )V
      WHERE V.FK_IDXFLW=#{myIdx}
   </select>
   
   <!-- ===== 내 팔로우 수 가져오기 =====   -->
   <select id="getflwCnt" parameterType="String" resultType="int">
      SELECT COUNT(FK_IDXFLWED) AS FK_IDXFLWEDCNT
      FROM TBL_FOLLOW
      WHERE FK_IDXFLW = #{myIdx}
   </select>
   
   <!-- ===== 좋아요 likeno 가져오기 =====   -->
   <select id="getLikeno" parameterType="java.util.HashMap" resultType="String">
      SELECT LIKENO
      FROM TBL_LIKE
      WHERE FK_LIKEIDX = #{fk_likeidx} AND SNSNO = #{likeseq}
   </select>
   
   <!-- ===== 좋아요 알림 insert ===== -->	
	<insert id="insertLikeAlarm" parameterType="java.util.HashMap">
		insert into tbl_alarm(alarmno,fk_idx,alarmdate,astatus,likeno,alarm_target)
		values(seq_tbl_alarm.nextval,#{fk_likeidx},default,default,#{likeno},#{alarm_target})
	</insert>
	
	<!-- ===== 알림 가져오기 =====   -->
	<resultMap type="java.util.HashMap" id="alarmListMap">
		<result property="alarmno" column="ALARMNO" javaType="int" />
		<result property="fk_idx" column="FK_IDX" javaType="String" />
		<result property="alarmdate" column="ALARMDATE" javaType="String" />
		<result property="astatus" column="ASTATUS" javaType="int" />
		<result property="likeno" column="LIKENO" javaType="int" />
		<result property="snsno" column="SNSNO" javaType="String" />
		<result property="alarm_target" column="ALARM_TARGET" javaType="String" />
		<result property="name" column="NAME" javaType="String" />
	</resultMap>
	<select id="alarmList" parameterType="java.util.HashMap" resultMap="alarmListMap"> 
      	SELECT V.*,X.NAME
		FROM 
		(
		SELECT A.ALARMNO,A.FK_IDX,A.ALARMDATE,A.ASTATUS,A.LIKENO,A.ALARM_TARGET,B.SNSNO
		FROM
		(
		SELECT ALARMNO,FK_IDX,ALARMDATE,ASTATUS,LIKENO,ALARM_TARGET
		FROM TBL_ALARM) A 
		JOIN
		(SELECT LIKENO,SNSNO FROM TBL_LIKE)B
		ON A.LIKENO = B.LIKENO)V
		LEFT JOIN
		(SELECT IDX,NAME FROM TBL_SHYMEMBER)X
		ON V.FK_IDX = X.IDX
		WHERE V.ALARM_TARGET = #{myIdx}
		ORDER BY V.ALARMDATE DESC
	</select>
	
    <!-- ===== 알림 타겟 가져오기 =====   -->
    <select id="alarmTarget" parameterType="String" resultType="String">
       SELECT FK_IDX
       FROM TBL_SHYMEMO
       WHERE SNSNO = #{likeseq}
    </select>
    
    <!-- ===== 알림 카운트 가져오기 =====   -->
    <select id="alarmCnt" parameterType="String" resultType="int">
        SELECT COUNT(*)
      	FROM TBL_ALARM
      	WHERE ALARM_TARGET = #{myIdx} AND ASTATUS = 1
    </select>
    
    <!-- ===== 알림카운트 업데이트 =====   -->
   <update id="updateAlarm" parameterType="java.util.HashMap">
      UPDATE TBL_ALARM SET ASTATUS = 0
      WHERE ALARM_TARGET = #{myIdx} AND ALARMNO IN 
       <foreach collection="alarmnoArr" item="alarmno" index="i" open="(" close=")" separator=",">
		${alarmno}
	  </foreach>
   </update>
   
   <!-- ===== 개인정보 가져오기 =====   -->
	<resultMap type="java.util.HashMap" id="myMap">
		<result property="idx" 			column="IDX" javaType="String" />
		<result property="name" 		column="NAME" 			javaType="String"/>
		<result property="email" 		column="EMAIL" 			javaType="String"/>
		<result property="myimg" 		column="MYIMG" 			javaType="String"/>
		<result property="myintro" 		column="MYINTRO" 			javaType="String"/>
	</resultMap>
	<select id="selectMyinfo" parameterType="java.util.HashMap" resultMap="myMap"> 
      	SELECT *
      	FROM TBL_SHYMEMBER
		WHERE IDX = #{myIdx}
	</select>
	
	<!-- ===== 해시태그된 샤이목록 가져오기 =====   -->
	<resultMap type="java.util.HashMap" id="hashtagMap">
		<result property="snsno" 		column="SNSNO" 			javaType="String"/>
		<result property="fk_idx" 		column="FK_IDX" 		javaType="String"/>
		<result property="scontent" 	column="SCONTENT" 		javaType="String"/>
		<result property="sdatedtime" 	column="SDATEDTIME" 	javaType="String"/>
		<result property="slikecnt" 	column="SLIKECNT" 		javaType="String"/>
		<result property="sblamecnt" 	column="SBLAMECNT" 		javaType="String"/>
		<result property="publicyn" 	column="PUBLICYN" 		javaType="String"/>
		<result property="simage" 		column="SIMAGE" 		javaType="String"/>
		<result property="stagfollow" 	column="STAGFOLLOW" 	javaType="String"/>
		<result property="staggeo" 		column="STAGGEO" 		javaType="String"/>
		<result property="status" 		column="STATUS" 		javaType="String"/>
		<result property="name" 		column="NAME" 			javaType="String"/>
		<result property="email" 		column="EMAIL" 			javaType="String"/>
		<result property="myimg" 		column="MYIMG" 			javaType="String"/>
		<result property="snsnocnt" 	column="SNSNOCNT" 			javaType="int"/>
		<result property="shyplace" 	column="shyplace" 		javaType="String"/>
		<result property="geoseq" 	column="geoseq" 		javaType="String"/>
		<result property="geofk_snsno" 	column="geofk_snsno" 		javaType="String"/>
		<result property="shypay" 	column="shypay" 		javaType="String"/>
		<result property="shyprice" 	column="shyprice" 		javaType="String"/>
	</resultMap>
	<select id="HashtagshyList" parameterType="java.util.HashMap" resultMap="hashtagMap">
		SELECT X.*,NVL(Y.SNSNOCNT,0) AS SNSNOCNT
		FROM
		(
		select a.* , B.EMAIL, B.NAME , B.MYIMG , c.shyplace, c.seq as geoseq,
		c.fk_snsno as geofk_snsno , row_number() over(order by a.sdatedtime
		desc) as RNO
		from
		TBL_SHYMEMO A inner JOIN TBL_SHYMEMBER B ON A.FK_IDX = B.IDX left outer join
		tbl_geo c on a.snsno = c.fk_snsno
		WHERE 1=1 AND A.STATUS = 1 AND A.SCONTENT LIKE '%' || #{word} || '%'
		ORDER BY A.SDATEDTIME DESC)X
		LEFT JOIN
		(SELECT SNSNO,COUNT(SNSNO) AS SNSNOCNT FROM TBL_LIKE GROUP BY SNSNO) Y
		ON X.SNSNO = Y.SNSNO
		<!-- WHERE RNO >= #{start} AND RNO <![CDATA[<=]]> #{end} -->
	</select>
	
	<!-- ===== 팔로우상태 가져오기 =====   -->
	<!-- <select id="followCheck" parameterType="java.util.HashMap" resultType="int"> 
      	select case( select count(*) from tbl_follow where status=1 and fk_idxflw=#{myIdx} and fk_idxflwed = #{folwidx}) when 1 then 1 
        else ( case (
          select count(*) from tbl_follow where status=1 and fk_idxflw=#{myIdx} and fk_idxflwed = #{folwidx}
         ) when 0 then 0 
        else -1 end ) end as followcheck
		from dual
	</select> -->
	

    
</mapper>	